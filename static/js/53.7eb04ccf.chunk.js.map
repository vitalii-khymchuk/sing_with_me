{"version":3,"file":"static/js/53.7eb04ccf.chunk.js","mappings":"4NAEMA,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCC,EAAAA,GAAAA,IAAgB,YAAY,KAAD,EAAtC,OAAsCN,EAAAG,EAAAI,KAA1CN,EAAID,EAAJC,KAAIE,EAAAK,OAAA,SACLP,GAAI,wBAAAE,EAAAM,OAAA,GAAAV,EAAA,KACZ,kBAHoB,OAAAJ,EAAAe,MAAA,KAAAC,UAAA,K,6BCIfC,EAAc,SAAHjB,GAA2C,IAADkB,EAAAlB,EAApCmB,mBAAAA,OAAkB,IAAAD,EAAG,WAAO,EAACA,EAC5CE,GAAWC,EAAAA,EAAAA,MACjBC,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACbhC,IACGkC,MAAK,SAAAC,GAAe,IAAZ5B,EAAI4B,EAAJ5B,KACPqB,EAAWrB,EACb,IACC6B,SAAQ,WACPJ,GAAa,EACf,IACFK,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,GAAG,IAEH,IAMMC,EAAmBd,EChCO,SAACA,GAAO,OACxCA,EAAQe,KAAI,SAAAzC,GAA0B,MAAQ,CAC5C0C,GADgB1C,EAAH2C,IAEbC,WAFuB5C,EAAL6C,MAGlBC,2BAH8B9C,EAAL+C,MAIzBC,yBAJoChD,EAAJiD,KAIDC,OAChC,GAAG,CD0B+BC,CAA0BzB,GAAW,GACxE,OACE0B,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,MAAOd,EACPe,WAAW,eACXC,YAXgB,SAACd,GACnB,IAAQO,EAASvB,EAAQ+B,MAAK,SAACC,GAAC,OAAKA,EAAEf,MAAQD,CAAE,IAAzCO,KACR9B,EAAmB8B,GACnB7B,EAAS,IACX,EAQIU,UAAWA,GAGjB,E,UErCM6B,EAAU,WACd,IAAMxC,GAAqByC,EAAAA,EAAAA,IAAeC,EAAAA,IAE1C,OACET,EAAAA,EAAAA,KAACU,EAAAA,GAAG,CAACC,GAAG,OAAMC,UACZZ,EAAAA,EAAAA,KAACnC,EAAW,CAACE,mBAAoBA,KAGvC,C","sources":["modules/History/api/getHistory.js","modules/History/components/HistoryList/HistoryList.jsx","modules/History/helpers/formateResultsForSongList.js","pages/History/History.jsx"],"sourcesContent":["import axiosClient from \"config/axiosConfig\";\n\nconst getHistoryQuery = async () => {\n  const { data } = await axiosClient.get(\"/history\");\n  return data;\n};\n\nexport { getHistoryQuery };\n","import { useEffect, useState } from \"react\";\nimport { getHistoryQuery } from \"modules/History/api/getHistory\";\nimport { formateResultsForSongList } from \"modules/History/helpers/formateResultsForSongList\";\nimport { SongList } from \"components/SongList\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst HistoryList = ({ setResultsManually = () => {} }) => {\n  const navigate = useNavigate();\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getHistoryQuery()\n      .then(({ data }) => {\n        setResults(data);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n\n  const onCardClick = (id) => {\n    const { hits } = results.find((e) => e._id === id);\n    setResultsManually(hits);\n    navigate(\"/\");\n  };\n\n  const formattedResults = results ? formateResultsForSongList(results) : [];\n  return (\n    <SongList\n      songs={formattedResults}\n      footerText=\"Found items:\"\n      onCardClick={onCardClick}\n      isLoading={isLoading}\n    />\n  );\n};\n\nexport { HistoryList };\n","const formateResultsForSongList = (results) =>\n  results.map(({ _id, query, thumb, hits }) => ({\n    id: _id,\n    full_title: query,\n    header_image_thumbnail_url: thumb,\n    release_date_for_display: hits.length,\n  }));\n\nexport { formateResultsForSongList };\n","import { Box } from \"@chakra-ui/react\";\nimport { HistoryList } from \"modules/History\";\nimport { useSearchStore, setResultsManuallySelector } from \"modules/Recorder\";\n\nconst History = () => {\n  const setResultsManually = useSearchStore(setResultsManuallySelector);\n\n  return (\n    <Box pt=\"1rem\">\n      <HistoryList setResultsManually={setResultsManually} />\n    </Box>\n  );\n};\n\nexport { History };\n"],"names":["getHistoryQuery","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosClient$ge","data","wrap","_context","prev","next","axiosClient","sent","abrupt","stop","apply","arguments","HistoryList","_ref$setResultsManual","setResultsManually","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","isLoading","setIsLoading","useEffect","then","_ref2","finally","window","scrollTo","top","behavior","formattedResults","map","id","_id","full_title","query","header_image_thumbnail_url","thumb","release_date_for_display","hits","length","formateResultsForSongList","_jsx","SongList","songs","footerText","onCardClick","find","e","History","useSearchStore","setResultsManuallySelector","Box","pt","children"],"sourceRoot":""}