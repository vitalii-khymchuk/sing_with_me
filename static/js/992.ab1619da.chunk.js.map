{"version":3,"file":"static/js/992.ab1619da.chunk.js","mappings":"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","sources":["modules/SavedLibrary/api/savedAPI.js","modules/SavedLibrary/store/store.js","modules/SavedLibrary/store/selectors.js","modules/SavedLibrary/components/SavedList/SavedList.jsx","modules/SavedLibrary/components/AddToSavedBtn/AddToSavedBtn.jsx","../node_modules/@chakra-ui/toast/dist/chunk-7FYWZXXG.mjs","modules/ShowResults/Components/MainResult/MainResult.jsx","modules/ShowResults/Components/Results/Results.jsx","pages/Search/Search.jsx"],"sourcesContent":["import axiosClient from \"config/axiosConfig\";\n\nconst getSavedQuery = async () => {\n  const { data } = await axiosClient.get(\"/saved\");\n  return data;\n};\n\nconst postSavedQuery = async (item = {}) => {\n  const { data } = await axiosClient.post(\"/saved\", item);\n  return data;\n};\n\nconst deleteSavedQuery = async (id) => {\n  const { data } = await axiosClient.delete(`/saved/${id}`);\n  return data;\n};\n\nexport { getSavedQuery, postSavedQuery, deleteSavedQuery };\n","import { create } from \"zustand\";\nimport { immer } from \"zustand/middleware/immer\";\nimport { devtools } from \"zustand/middleware\";\nimport {\n  getSavedQuery,\n  postSavedQuery,\n  deleteSavedQuery,\n} from \"../api/savedAPI\";\n\nconst queryHandler = async (set, callback) => {\n  try {\n    set((state) => {\n      state.isLoading = true;\n      state.isError = null;\n    });\n    await callback();\n  } catch (error) {\n    set((state) => {\n      state.isError = error.message;\n    });\n  } finally {\n    set((state) => {\n      state.isLoading = false;\n    });\n  }\n};\n\nconst useSavedLibStore = create(\n  immer(\n    devtools((set) => {\n      return {\n        savedSongs: [],\n        isLoading: false,\n        isError: null,\n\n        fetchSaved: async () => {\n          const fetchSaved = async () => {\n            const { data } = await getSavedQuery();\n            set((state) => {\n              state.savedSongs = data;\n            });\n          };\n          queryHandler(set, fetchSaved);\n        },\n\n        addToSaved: async (data) => {\n          const addToSaved = async () => {\n            await postSavedQuery(data);\n            set((state) => {\n              state.savedSongs.unshift(data);\n            });\n          };\n          queryHandler(set, addToSaved);\n        },\n\n        removeFromSaved: async (id) => {\n          const removeFromSaved = async () => {\n            await deleteSavedQuery(id);\n            set((state) => {\n              state.savedSongs = state.savedSongs.filter(\n                (item) => item.id !== id\n              );\n            });\n          };\n          queryHandler(set, removeFromSaved);\n        },\n      };\n    })\n  )\n);\n\nexport { useSavedLibStore };\n","const fetchSavedSelector = (state) => state.fetchSaved;\nconst addToSavedSelector = (state) => state.addToSaved;\nconst removeFromSavedSelector = (state) => state.removeFromSaved;\n\nconst isSavedSongsLoadingSelector = (state) => state.isLoading;\nconst savedSongsSelector = (state) => state.savedSongs;\n\nexport {\n  fetchSavedSelector,\n  addToSavedSelector,\n  removeFromSavedSelector,\n  isSavedSongsLoadingSelector,\n  savedSongsSelector,\n};\n","import {\n  useSavedLibStore,\n  fetchSavedSelector,\n  savedSongsSelector,\n  isSavedSongsLoadingSelector,\n} from \"modules/SavedLibrary/store\";\nimport { SongList } from \"components/SongList\";\nimport { useEffect } from \"react\";\n\nconst SavedList = ({ onCardClick = () => {} }) => {\n  const savedSongs = useSavedLibStore(savedSongsSelector);\n  const fetchSaved = useSavedLibStore(fetchSavedSelector);\n  const isLoading = useSavedLibStore(isSavedSongsLoadingSelector);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n    fetchSaved();\n  }, [fetchSaved]);\n  return (\n    <SongList\n      songs={savedSongs ?? []}\n      footerText=\"Release date:\"\n      onCardClick={onCardClick}\n      isLoading={isLoading}\n    />\n  );\n};\nexport { SavedList };\n","import { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\nimport { IconButton } from \"@chakra-ui/react\";\nimport {\n  useSavedLibStore,\n  savedSongsSelector,\n  addToSavedSelector,\n  removeFromSavedSelector,\n} from \"../../store\";\n\nconst AddToSavedBtn = ({\n  dataToSave = {},\n  onAddedToSaved = () => {},\n  onRemovedFromSaved = () => {},\n}) => {\n  const savedSongs = useSavedLibStore(savedSongsSelector);\n  const isInSaved = savedSongs.some((item) => item.id === dataToSave.id);\n\n  const addToSaved = useSavedLibStore(addToSavedSelector);\n  const removeFromSaved = useSavedLibStore(removeFromSavedSelector);\n\n  const toggleToSaved = async () => {\n    if (isInSaved) {\n      await removeFromSaved(dataToSave.id);\n      onRemovedFromSaved();\n    } else {\n      await addToSaved(dataToSave);\n      onAddedToSaved();\n    }\n  };\n\n  return (\n    <IconButton\n      aria-label=\"Add song to saved\"\n      type=\"button\"\n      bg=\"transparent\"\n      icon={\n        isInSaved ? <AiFillHeart size=\"24\" /> : <AiOutlineHeart size=\"24\" />\n      }\n      onClick={toggleToSaved}\n    />\n  );\n};\n\nexport { AddToSavedBtn };\n","import {\n  useToastOptionContext\n} from \"./chunk-D3Z6CXO7.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-PE6CKLNB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n","import {\n  Card,\n  CardBody,\n  Image,\n  Stack,\n  Heading,\n  Text,\n  Box,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { RxReset } from \"react-icons/rx\";\n\nconst MainResult = ({\n  song,\n  SaveResultBtn = <></>,\n  onMainCardClick = () => {},\n  resetResults,\n}) => {\n  const { full_title, header_image_url, release_date_for_display, id } = song;\n  const onMainCardClickHandler = () => {\n    onMainCardClick(id);\n  };\n  return (\n    <Card maxW=\"sm\" bgColor=\"transparent\" color=\"white\" p={2} boxShadow=\"none\">\n      <CardBody p={2}>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          onClick={onMainCardClickHandler}\n          _hover={{ cursor: \"pointer\" }}\n        >\n          <Image\n            objectFit=\"cover\"\n            boxSize=\"20rem\"\n            borderRadius=\"lg\"\n            src={header_image_url}\n            alt={`${full_title} cover`}\n          />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <IconButton\n            aria-label=\"Reset result\"\n            type=\"button\"\n            bg=\"transparent\"\n            icon={<RxReset size=\"24\" />}\n            onClick={resetResults}\n          />\n          <Stack\n            mt=\"6\"\n            spacing=\"3\"\n            alignItems=\"start\"\n            onClick={onMainCardClickHandler}\n            _hover={{ cursor: \"pointer\" }}\n          >\n            <Heading size=\"md\">{full_title}</Heading>\n            <Text color=\"gray.400\">{`Release date: ${\n              release_date_for_display ?? \"not available\"\n            }`}</Text>\n          </Stack>\n          <SaveResultBtn dataToSave={song} />\n        </Box>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport { MainResult };\n","import { SongList } from \"components/SongList\";\nimport { MainResult } from \"../MainResult\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst Results = ({\n  results,\n  resetResults = () => {},\n  SaveResultBtn = <></>,\n  onCardClick = () => {},\n}) => {\n  const slicedResults = results?.slice(1);\n  return (\n    <>\n      {results && results.length > 0 && (\n        <Box pt=\"0.7rem\" display=\"flex\" justifyContent=\"center\">\n          <MainResult\n            song={results[0]}\n            resetResults={resetResults}\n            SaveResultBtn={SaveResultBtn}\n            onMainCardClick={onCardClick}\n          />\n        </Box>\n      )}\n      {results && slicedResults.length > 1 && (\n        <Box py=\"0.7rem\">\n          <SongList\n            songs={slicedResults}\n            onCardClick={onCardClick}\n            footerText=\"Release date:\"\n          />\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport { Results };\n","import { Box, useToast } from \"@chakra-ui/react\";\nimport { Results } from \"modules/ShowResults\";\nimport {\n  Recorder,\n  SearchForm,\n  useSearchStore,\n  resultsSelector,\n  resetResultsSelector,\n} from \"modules/Recorder\";\nimport { AddToSavedBtn } from \"modules/SavedLibrary\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Search = () => {\n  const toast = useToast();\n  const results = useSearchStore(resultsSelector);\n  const resetResults = useSearchStore(resetResultsSelector);\n\n  const navigate = useNavigate();\n  const navToDetails = (id) => {\n    navigate(`/details/${id}`);\n  };\n\n  useEffect(() => {\n    if (results && results.length === 0) {\n      toast({\n        title: \"No results by your query\",\n        status: \"info\",\n        isClosable: true,\n      });\n    }\n  }, [results, toast]);\n\n  return (\n    <>\n      {(!results || results.length === 0) && (\n        <>\n          <Box mt=\"1rem\">\n            <SearchForm />\n          </Box>\n          <Box\n            position=\"absolute\"\n            top=\"50%\"\n            left=\"50%\"\n            transform=\"translate(-50%, -50%)\"\n          >\n            <Recorder />\n          </Box>\n        </>\n      )}\n      {results && results.length !== 0 && (\n        <Results\n          results={results}\n          resetResults={resetResults}\n          SaveResultBtn={AddToSavedBtn}\n          onCardClick={navToDetails}\n        />\n      )}\n    </>\n  );\n};\n\nexport { Search };\n"],"names":["getSavedQuery","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosClient$ge","data","wrap","_context","prev","next","axiosClient","sent","abrupt","stop","apply","arguments","postSavedQuery","_ref2","_callee2","item","_yield$axiosClient$po","_args2","_context2","length","undefined","deleteSavedQuery","_ref3","_callee3","id","_yield$axiosClient$de","_context3","concat","_x","queryHandler","set","callback","state","isLoading","isError","t0","message","finish","_x2","useSavedLibStore","create","immer","devtools","savedSongs","fetchSaved","_fetchSaved","_yield$getSavedQuery","addToSaved","_addToSaved","_callee5","_context5","_callee4","_context4","unshift","_x3","removeFromSaved","_removeFromSaved","_callee7","_context7","_ref4","_callee6","_context6","filter","_x4","fetchSavedSelector","addToSavedSelector","removeFromSavedSelector","isSavedSongsLoadingSelector","savedSongsSelector","SavedList","_ref$onCardClick","onCardClick","useEffect","window","scrollTo","top","behavior","_jsx","SongList","songs","footerText","AddToSavedBtn","_ref$dataToSave","dataToSave","_ref$onAddedToSaved","onAddedToSaved","_ref$onRemovedFromSav","onRemovedFromSaved","isInSaved","some","toggleToSaved","IconButton","type","bg","icon","AiFillHeart","size","AiOutlineHeart","onClick","useToast","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn","direction","_objectSpread","MainResult","song","_ref$SaveResultBtn","SaveResultBtn","_Fragment","_ref$onMainCardClick","onMainCardClick","resetResults","full_title","header_image_url","release_date_for_display","onMainCardClickHandler","Card","maxW","bgColor","color","p","boxShadow","children","_jsxs","CardBody","Box","display","justifyContent","_hover","cursor","Image","objectFit","boxSize","borderRadius","src","alt","alignItems","RxReset","Stack","mt","spacing","Heading","Text","Results","results","_ref$resetResults","slicedResults","slice","pt","py","Search","toast","useSearchStore","resultsSelector","resetResultsSelector","navigate","useNavigate","title","status","isClosable","SearchForm","position","left","transform","Recorder"],"sourceRoot":""}