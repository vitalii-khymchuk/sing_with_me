{"version":3,"file":"static/js/34.9feee030.chunk.js","mappings":"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","sources":["pages/Account/Account.jsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs"],"sourcesContent":["import { Stack, Text, Box, Button } from \"@chakra-ui/react\";\nimport { GoogleLogIn } from \"modules/Authorization\";\nimport {\n  isLoggedInSelector,\n  useAuthStore,\n  AccountInfo,\n  signOutSelector,\n} from \"modules/Authorization\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst Account = () => {\n  const isLoggedIn = useAuthStore(isLoggedInSelector);\n  const signOut = useAuthStore(signOutSelector);\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  const setViewportHeight = useCallback(() => {\n    setWindowHeight(window.innerHeight);\n  }, [setWindowHeight]);\n\n  window.addEventListener(\"resize\", setViewportHeight);\n\n  useEffect(\n    () => () => {\n      window.removeEventListener(\"resize\", setViewportHeight);\n    },\n    [setViewportHeight]\n  );\n\n  return (\n    <>\n      <Stack alignItems=\"center\" height=\"100%\">\n        <Box position=\"absolute\" top=\"35%\">\n          {isLoggedIn ? (\n            <AccountInfo />\n          ) : (\n            <Text fontSize=\"lg\">\n              Sign in to save music <br />\n              to your personal library\n            </Text>\n          )}\n        </Box>\n        <Box position=\"absolute\" top={`calc(${windowHeight}px - 10rem)`}>\n          {isLoggedIn ? (\n            <Button\n              variant=\"outline\"\n              colorScheme=\"whiteAlpha\"\n              onClick={signOut}\n            >\n              Log out\n            </Button>\n          ) : (\n            <GoogleLogIn />\n          )}\n        </Box>\n      </Stack>\n    </>\n  );\n};\nexport { Account };\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n"],"names":["Account","isLoggedIn","useAuthStore","isLoggedInSelector","signOut","signOutSelector","_useState","useState","window","innerHeight","_useState2","_slicedToArray","windowHeight","setWindowHeight","setViewportHeight","useCallback","addEventListener","useEffect","removeEventListener","_jsx","_Fragment","children","_jsxs","Stack","alignItems","height","Box","position","top","AccountInfo","Text","fontSize","concat","Button","variant","colorScheme","onClick","GoogleLogIn","_createContext","createContext","strict","name","_createContext2","useButtonGroup","ButtonIcon","props","className","rest","_objectWithoutProperties","_excluded","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","_objectSpread","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","_props$spacing","spacing","_props$children","Spinner","color","width","__css","marginProp","spinnerStyles","useMemo","_objectSpread2","_defineProperty","forwardRef","ref","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","value","isButton","setIsButton","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart"],"sourceRoot":""}