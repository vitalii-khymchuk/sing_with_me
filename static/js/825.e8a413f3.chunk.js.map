{"version":3,"file":"static/js/825.e8a413f3.chunk.js","mappings":"iQAUMA,EAAW,SAAHC,GAQP,IAADC,EAAAD,EAPJE,KACEC,EAAUF,EAAVE,WACAC,EAA0BH,EAA1BG,2BACAC,EAAwBJ,EAAxBI,yBACAC,EAAEL,EAAFK,GAEFC,EAAWP,EAAXO,YAKA,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAW,CAAEC,KAAM,SAAUC,GAAI,OACjCC,SAAS,SACTC,QAAQ,UACRC,EAAE,OACFC,OAAQ,CACNC,gBAAiB,2BACjBC,OAAQ,WAEVC,OAAQ,CACNF,gBAAiB,4BAEnBG,QAhBuB,WACzBb,EAAYD,EACd,EAcgCe,SAAA,EAE5BC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,UAAU,QACVC,QAAQ,OACRC,aAAa,KACbC,IAAKvB,EACLwB,IAAG,GAAAC,OAAK1B,EAAU,aAGpBK,EAAAA,EAAAA,MAACsB,EAAAA,EAAK,CAAAT,SAAA,EACJC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CACPC,EAAE,KACFC,QAAQ,OACRC,cAAc,SACdC,eAAe,gBACfC,WAAW,SACXC,OAAO,OAAMhB,UAEbC,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,KAAKC,KAAK,QAAQ3B,SAAS,SAAQQ,SAC9ClB,OAGLmB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAACT,EAAE,SAASU,GAAG,IAAGrB,UAC3BC,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAACC,MAAO,WAAWvB,SAAEhB,WAKpC,EC7DMwC,EAAW,SAAH7C,GAKP,IAAD8C,EAAA9C,EAJJ+C,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAAhD,EACViD,WAAAA,OAAU,IAAAD,EAAG,GAAEA,EAAAE,EAAAlD,EACfO,YAAAA,OAAW,IAAA2C,EAAG,WAAO,EAACA,EAAAC,EAAAnD,EACtBoD,UAAAA,OAAS,IAAAD,GAAQA,EAEjB,OACE3C,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAAhC,SAAA,EACEb,EAAAA,EAAAA,MAAC8C,EAAAA,GAAI,CAACC,QAAQ,SAAQlC,SAAA,CACnB0B,EAAMS,OAAS,IACbJ,GACDL,EAAMU,KAAI,SAACvD,GACT,IAAMG,EAA2BH,EAAKG,yBAAwB,GAAAwB,OACvDoB,EAAU,KAAApB,OAAI3B,EAAKG,0BAAwB,GAAAwB,OAC3CoB,EAAU,kBACjB,OACE3B,EAAAA,EAAAA,KAACoC,EAAAA,GAAQ,CAAArC,UACPC,EAAAA,EAAAA,KAACvB,EAAQ,CACPG,MAAIyD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOzD,GAAI,IAAEG,yBAAAA,IACjBE,YAAaA,KAHFL,EAAKI,GAOxB,IACD8C,IACC5C,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAAhC,SAAA,EACEC,EAAAA,EAAAA,KAACsC,EAAAA,EAAQ,CAACvB,OAAO,OAAOX,aAAa,SACrCJ,EAAAA,EAAAA,KAACsC,EAAAA,EAAQ,CAACvB,OAAO,OAAOX,aAAa,SACrCJ,EAAAA,EAAAA,KAACsC,EAAAA,EAAQ,CAACvB,OAAO,OAAOX,aAAa,SACrCJ,EAAAA,EAAAA,KAACsC,EAAAA,EAAQ,CAACvB,OAAO,OAAOX,aAAa,cAIzB,IAAjBqB,EAAMS,SAAiBJ,IACtB9B,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAAAtB,SAAC,iCAId,C,+ICvCMwC,EAAa,eAAA7D,GAAA8D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAAA,GAAAA,IAAgB,UAAU,KAAD,EAApC,OAAoCN,EAAAG,EAAAI,KAAxCN,EAAID,EAAJC,KAAIE,EAAAK,OAAA,SACLP,GAAI,wBAAAE,EAAAM,OAAA,GAAAV,EAAA,KACZ,kBAHkB,OAAAjE,EAAA4E,MAAA,KAAAC,UAAA,KAKbC,EAAc,eAAAC,GAAAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgB,IAAA,IAAAC,EAAAC,EAAAf,EAAAgB,EAAAN,UAAA,OAAAd,EAAAA,EAAAA,KAAAK,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAAgB,OAATU,EAAIE,EAAA3B,OAAA,QAAA6B,IAAAF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACC,EAAAb,KAAA,EACdC,EAAAA,GAAAA,KAAiB,SAAUS,GAAM,KAAD,EAA3C,OAA2CC,EAAAE,EAAAX,KAA/CN,EAAIe,EAAJf,KAAIiB,EAAAV,OAAA,SACLP,GAAI,wBAAAiB,EAAAT,OAAA,GAAAK,EAAA,KACZ,kBAHmB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAKdS,EAAgB,eAAAC,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwB,EAAOlF,GAAE,IAAAmF,EAAAtB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACTC,EAAAA,GAAAA,OAAmB,UAAD3C,OAAWvB,IAAM,KAAD,EAA7C,OAA6CmF,EAAAC,EAAAjB,KAAjDN,EAAIsB,EAAJtB,KAAIuB,EAAAhB,OAAA,SACLP,GAAI,wBAAAuB,EAAAf,OAAA,GAAAa,EAAA,KACZ,gBAHqBG,GAAA,OAAAJ,EAAAX,MAAA,KAAAC,UAAA,KCHhBe,EAAY,eAAA5F,GAAA8D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO4B,EAAKC,GAAQ,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKlC,OALkCF,EAAAC,KAAA,EAErCuB,GAAI,SAACE,GACHA,EAAM3C,WAAY,EAClB2C,EAAMC,QAAU,IAClB,IAAG3B,EAAAE,KAAA,EACGuB,IAAW,KAAD,EAAAzB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAA4B,GAAA5B,EAAA,SAEhBwB,GAAI,SAACE,GACHA,EAAMC,QAAU3B,EAAA4B,GAAMC,OACxB,IAAG,OAIA,OAJA7B,EAAAC,KAAA,EAEHuB,GAAI,SAACE,GACHA,EAAM3C,WAAY,CACpB,IAAGiB,EAAA8B,OAAA,4BAAA9B,EAAAM,OAAA,GAAAV,EAAA,uBAEN,gBAhBiB0B,EAAAS,GAAA,OAAApG,EAAA4E,MAAA,KAAAC,UAAA,KAkBZwB,GAAmBC,EAAAA,EAAAA,KACvBC,EAAAA,EAAAA,IACEC,EAAAA,EAAAA,KAAS,SAACX,GACR,MAAO,CACLY,WAAY,GACZrD,WAAW,EACX4C,QAAS,KAETU,WAAW,WAAD,IAAAC,GAAA7C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwB,IAAA,IAAAkB,EAAA,OAAA3C,EAAAA,EAAAA,KAAAK,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACJmC,EAAU,eAAA3B,GAAAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgB,IAAA,IAAA4B,EAAAzC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACMV,IAAgB,KAAD,EAAA+C,EAAAxB,EAAAX,KAA9BN,EAAIyC,EAAJzC,KACR0B,GAAI,SAACE,GACHA,EAAMU,WAAatC,CACrB,IAAG,wBAAAiB,EAAAT,OAAA,GAAAK,EAAA,KACJ,kBALe,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAMhBe,EAAaC,EAAKa,GAAY,wBAAAhB,EAAAf,OAAA,GAAAa,EAAA,KAC/B,yBAAAmB,EAAA/B,MAAA,KAAAC,UAAA,EARU,GAUXgC,WAAW,WAAD,IAAAC,GAAAhD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA+C,EAAO5C,GAAI,IAAA0C,EAAA,OAAA9C,EAAAA,EAAAA,KAAAK,MAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OACfsC,EAAU,eAAAtB,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiD,IAAA,OAAAlD,EAAAA,EAAAA,KAAAK,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EACXO,EAAeX,GAAM,KAAD,EAC1B0B,GAAI,SAACE,GACHA,EAAMU,WAAWU,QAAQhD,EAC3B,IAAG,wBAAA+C,EAAAvC,OAAA,GAAAsC,EAAA,KACJ,kBALe,OAAA1B,EAAAX,MAAA,KAAAC,UAAA,KAMhBe,EAAaC,EAAKgB,GAAY,wBAAAG,EAAArC,OAAA,GAAAoC,EAAA,KAC/B,gBAAAK,GAAA,OAAAN,EAAAlC,MAAA,KAAAC,UAAA,EARU,GAUXwC,gBAAgB,WAAD,IAAAC,GAAAxD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAuD,EAAOjH,GAAE,IAAA+G,EAAA,OAAAtD,EAAAA,EAAAA,KAAAK,MAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAClB8C,EAAe,eAAAI,GAAA3D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0D,IAAA,OAAA3D,EAAAA,EAAAA,KAAAK,MAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EAChBe,EAAiBhF,GAAI,KAAD,EAC1BuF,GAAI,SAACE,GACHA,EAAMU,WAAaV,EAAMU,WAAWmB,QAClC,SAAC3C,GAAI,OAAKA,EAAK3E,KAAOA,CAAE,GAE5B,IAAG,wBAAAqH,EAAAhD,OAAA,GAAA+C,EAAA,KACJ,kBAPoB,OAAAD,EAAA7C,MAAA,KAAAC,UAAA,KAQrBe,EAAaC,EAAKwB,GAAiB,wBAAAG,EAAA7C,OAAA,GAAA4C,EAAA,KACpC,gBAAAM,GAAA,OAAAP,EAAA1C,MAAA,KAAAC,UAAA,EAVe,GAYpB,MCnEEiD,EAAqB,SAAC/B,GAAK,OAAKA,EAAMW,UAAW,EACjDqB,EAAqB,SAAChC,GAAK,OAAKA,EAAMc,UAAW,EACjDmB,EAA0B,SAACjC,GAAK,OAAKA,EAAMsB,eAAgB,EAE3DY,EAA8B,SAAClC,GAAK,OAAKA,EAAM3C,SAAU,EACzD8E,EAAqB,SAACnC,GAAK,OAAKA,EAAMU,UAAW,E,6BCIjD0B,EAAY,SAAHnI,GAAoC,IAADkD,EAAAlD,EAA7BO,YAAAA,OAAW,IAAA2C,EAAG,WAAO,EAACA,EACnCuD,EAAaJ,EAAiB6B,GAC9BxB,EAAaL,EAAiByB,GAC9B1E,EAAYiD,EAAiB4B,GAQnC,OAPAG,EAAAA,EAAAA,YAAU,WACRC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,WAEZ9B,GACF,GAAG,CAACA,KAEFpF,EAAAA,EAAAA,KAACuB,EAAAA,EAAQ,CACPE,MAAiB,OAAV0D,QAAU,IAAVA,EAAAA,EAAc,GACrBxD,WAAW,gBACX1C,YAAaA,EACb6C,UAAWA,GAGjB,E,oBCnBMqF,EAAgB,SAAHzI,GAIZ,IAAD0I,EAAA1I,EAHJ2I,WAAAA,OAAU,IAAAD,EAAG,CAAC,EAACA,EAAAE,EAAA5I,EACf6I,eAAAA,OAAc,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAA9I,EACzB+I,mBAAAA,OAAkB,IAAAD,EAAG,WAAO,EAACA,EAGvBE,EADa3C,EAAiB6B,GACPe,MAAK,SAAChE,GAAI,OAAKA,EAAK3E,KAAOqI,EAAWrI,EAAE,IAE/DuG,EAAaR,EAAiB0B,GAC9BV,EAAkBhB,EAAiB2B,GAEnCkB,EAAa,eAAAnE,GAAAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAChByE,EAAU,CAAD3E,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACL8C,EAAgBsB,EAAWrI,IAAI,KAAD,EACpCyI,IAAqB1E,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EAEfsC,EAAW8B,GAAY,KAAD,EAC5BE,IAAiB,wBAAAxE,EAAAM,OAAA,GAAAV,EAAA,KAEpB,kBARkB,OAAAc,EAAAH,MAAA,KAAAC,UAAA,KAUnB,OACEvD,EAAAA,EAAAA,KAAC6H,EAAAA,EAAU,CACT,aAAW,oBACXC,KAAK,SACLC,GAAG,cACHC,KACEN,GAAY1H,EAAAA,EAAAA,KAACiI,EAAAA,IAAW,CAAChH,KAAK,QAAUjB,EAAAA,EAAAA,KAACkI,EAAAA,GAAc,CAACjH,KAAK,OAE/DnB,QAAS8H,GAGf,C,6GCrCMO,EAAQ,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MAIjB,OACErI,EAAAA,EAAAA,KAACsI,EAAAA,GAAG,CAACC,GAAG,OAAMxI,UACZC,EAAAA,EAAAA,KAAC6G,EAAAA,GAAS,CAAC5H,YALM,SAACD,GACpBoJ,EAAS,YAAD7H,OAAavB,GACvB,KAMF,C","sources":["components/SongList/SongCard.jsx","components/SongList/SongList.jsx","modules/SavedLibrary/api/savedAPI.js","modules/SavedLibrary/store/store.js","modules/SavedLibrary/store/selectors.js","modules/SavedLibrary/components/SavedList/SavedList.jsx","modules/SavedLibrary/components/AddToSavedBtn/AddToSavedBtn.jsx","pages/Saved/Saved.jsx"],"sourcesContent":["import {\n  Card,\n  Image,\n  Stack,\n  CardBody,\n  Heading,\n  Text,\n  CardFooter,\n} from \"@chakra-ui/react\";\n\nconst SongCard = ({\n  song: {\n    full_title,\n    header_image_thumbnail_url,\n    release_date_for_display,\n    id,\n  },\n  onCardClick,\n}) => {\n  const onCardClickHandler = () => {\n    onCardClick(id);\n  };\n  return (\n    <Card\n      direction={{ base: \"column\", sm: \"row\" }}\n      overflow=\"hidden\"\n      variant=\"outline\"\n      h=\"7rem\"\n      _hover={{\n        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n        cursor: \"pointer\",\n      }}\n      _focus={{\n        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n      }}\n      onClick={onCardClickHandler}\n    >\n      <Image\n        objectFit=\"cover\"\n        boxSize=\"7rem\"\n        borderRadius=\"md\"\n        src={header_image_thumbnail_url}\n        alt={`${full_title} cover`}\n      />\n\n      <Stack>\n        <CardBody\n          p=\"sm\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          height=\"7rem\"\n        >\n          <Heading size=\"sm\" maxH=\"2.5em\" overflow=\"hidden\">\n            {full_title}\n          </Heading>\n        </CardBody>\n        <CardFooter p=\"0.3rem\" mt=\"0\">\n          <Text color={\"gray.600\"}>{release_date_for_display}</Text>\n        </CardFooter>\n      </Stack>\n    </Card>\n  );\n};\n\nexport { SongCard };\n","import { ListItem, List, Skeleton, Text } from \"@chakra-ui/react\";\nimport { SongCard } from \"./SongCard\";\n\nconst SongList = ({\n  songs = [],\n  footerText = \"\",\n  onCardClick = () => {},\n  isLoading = false,\n}) => {\n  return (\n    <>\n      <List spacing=\"0.5rem\">\n        {songs.length > 0 &&\n          !isLoading &&\n          songs.map((song) => {\n            const release_date_for_display = song.release_date_for_display\n              ? `${footerText} ${song.release_date_for_display}`\n              : `${footerText} not available`;\n            return (\n              <ListItem key={song.id}>\n                <SongCard\n                  song={{ ...song, release_date_for_display }}\n                  onCardClick={onCardClick}\n                />\n              </ListItem>\n            );\n          })}\n        {isLoading && (\n          <>\n            <Skeleton height=\"8rem\" borderRadius=\"4px\" />\n            <Skeleton height=\"8rem\" borderRadius=\"4px\" />\n            <Skeleton height=\"8rem\" borderRadius=\"4px\" />\n            <Skeleton height=\"8rem\" borderRadius=\"4px\" />\n          </>\n        )}\n      </List>\n      {songs.length === 0 && !isLoading && (\n        <Text>There are no items here...</Text>\n      )}\n    </>\n  );\n};\n\nexport { SongList };\n","import axiosClient from \"config/axiosConfig\";\n\nconst getSavedQuery = async () => {\n  const { data } = await axiosClient.get(\"/saved\");\n  return data;\n};\n\nconst postSavedQuery = async (item = {}) => {\n  const { data } = await axiosClient.post(\"/saved\", item);\n  return data;\n};\n\nconst deleteSavedQuery = async (id) => {\n  const { data } = await axiosClient.delete(`/saved/${id}`);\n  return data;\n};\n\nexport { getSavedQuery, postSavedQuery, deleteSavedQuery };\n","import { create } from \"zustand\";\nimport { immer } from \"zustand/middleware/immer\";\nimport { devtools } from \"zustand/middleware\";\nimport {\n  getSavedQuery,\n  postSavedQuery,\n  deleteSavedQuery,\n} from \"../api/savedAPI\";\n\nconst queryHandler = async (set, callback) => {\n  try {\n    set((state) => {\n      state.isLoading = true;\n      state.isError = null;\n    });\n    await callback();\n  } catch (error) {\n    set((state) => {\n      state.isError = error.message;\n    });\n  } finally {\n    set((state) => {\n      state.isLoading = false;\n    });\n  }\n};\n\nconst useSavedLibStore = create(\n  immer(\n    devtools((set) => {\n      return {\n        savedSongs: [],\n        isLoading: false,\n        isError: null,\n\n        fetchSaved: async () => {\n          const fetchSaved = async () => {\n            const { data } = await getSavedQuery();\n            set((state) => {\n              state.savedSongs = data;\n            });\n          };\n          queryHandler(set, fetchSaved);\n        },\n\n        addToSaved: async (data) => {\n          const addToSaved = async () => {\n            await postSavedQuery(data);\n            set((state) => {\n              state.savedSongs.unshift(data);\n            });\n          };\n          queryHandler(set, addToSaved);\n        },\n\n        removeFromSaved: async (id) => {\n          const removeFromSaved = async () => {\n            await deleteSavedQuery(id);\n            set((state) => {\n              state.savedSongs = state.savedSongs.filter(\n                (item) => item.id !== id\n              );\n            });\n          };\n          queryHandler(set, removeFromSaved);\n        },\n      };\n    })\n  )\n);\n\nexport { useSavedLibStore };\n","const fetchSavedSelector = (state) => state.fetchSaved;\nconst addToSavedSelector = (state) => state.addToSaved;\nconst removeFromSavedSelector = (state) => state.removeFromSaved;\n\nconst isSavedSongsLoadingSelector = (state) => state.isLoading;\nconst savedSongsSelector = (state) => state.savedSongs;\n\nexport {\n  fetchSavedSelector,\n  addToSavedSelector,\n  removeFromSavedSelector,\n  isSavedSongsLoadingSelector,\n  savedSongsSelector,\n};\n","import {\n  useSavedLibStore,\n  fetchSavedSelector,\n  savedSongsSelector,\n  isSavedSongsLoadingSelector,\n} from \"modules/SavedLibrary/store\";\nimport { SongList } from \"components/SongList\";\nimport { useEffect } from \"react\";\n\nconst SavedList = ({ onCardClick = () => {} }) => {\n  const savedSongs = useSavedLibStore(savedSongsSelector);\n  const fetchSaved = useSavedLibStore(fetchSavedSelector);\n  const isLoading = useSavedLibStore(isSavedSongsLoadingSelector);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n    fetchSaved();\n  }, [fetchSaved]);\n  return (\n    <SongList\n      songs={savedSongs ?? []}\n      footerText=\"Release date:\"\n      onCardClick={onCardClick}\n      isLoading={isLoading}\n    />\n  );\n};\nexport { SavedList };\n","import { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\nimport { IconButton } from \"@chakra-ui/react\";\nimport {\n  useSavedLibStore,\n  savedSongsSelector,\n  addToSavedSelector,\n  removeFromSavedSelector,\n} from \"../../store\";\n\nconst AddToSavedBtn = ({\n  dataToSave = {},\n  onAddedToSaved = () => {},\n  onRemovedFromSaved = () => {},\n}) => {\n  const savedSongs = useSavedLibStore(savedSongsSelector);\n  const isInSaved = savedSongs.some((item) => item.id === dataToSave.id);\n\n  const addToSaved = useSavedLibStore(addToSavedSelector);\n  const removeFromSaved = useSavedLibStore(removeFromSavedSelector);\n\n  const toggleToSaved = async () => {\n    if (isInSaved) {\n      await removeFromSaved(dataToSave.id);\n      onRemovedFromSaved();\n    } else {\n      await addToSaved(dataToSave);\n      onAddedToSaved();\n    }\n  };\n\n  return (\n    <IconButton\n      aria-label=\"Add song to saved\"\n      type=\"button\"\n      bg=\"transparent\"\n      icon={\n        isInSaved ? <AiFillHeart size=\"24\" /> : <AiOutlineHeart size=\"24\" />\n      }\n      onClick={toggleToSaved}\n    />\n  );\n};\n\nexport { AddToSavedBtn };\n","import { Box } from \"@chakra-ui/react\";\nimport { SavedList } from \"modules/SavedLibrary\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Saved = () => {\n  const navigate = useNavigate();\n  const navToDetails = (id) => {\n    navigate(`/details/${id}`);\n  };\n  return (\n    <Box pt=\"1rem\">\n      <SavedList onCardClick={navToDetails} />\n    </Box>\n  );\n};\n\nexport { Saved };\n"],"names":["SongCard","_ref","_ref$song","song","full_title","header_image_thumbnail_url","release_date_for_display","id","onCardClick","_jsxs","Card","direction","base","sm","overflow","variant","h","_hover","backgroundColor","cursor","_focus","onClick","children","_jsx","Image","objectFit","boxSize","borderRadius","src","alt","concat","Stack","CardBody","p","display","flexDirection","justifyContent","alignItems","height","Heading","size","maxH","CardFooter","mt","Text","color","SongList","_ref$songs","songs","_ref$footerText","footerText","_ref$onCardClick","_ref$isLoading","isLoading","_Fragment","List","spacing","length","map","ListItem","_objectSpread","Skeleton","getSavedQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosClient$ge","data","wrap","_context","prev","next","axiosClient","sent","abrupt","stop","apply","arguments","postSavedQuery","_ref2","_callee2","item","_yield$axiosClient$po","_args2","_context2","undefined","deleteSavedQuery","_ref3","_callee3","_yield$axiosClient$de","_context3","_x","queryHandler","set","callback","state","isError","t0","message","finish","_x2","useSavedLibStore","create","immer","devtools","savedSongs","fetchSaved","_fetchSaved","_yield$getSavedQuery","addToSaved","_addToSaved","_callee5","_context5","_callee4","_context4","unshift","_x3","removeFromSaved","_removeFromSaved","_callee7","_context7","_ref4","_callee6","_context6","filter","_x4","fetchSavedSelector","addToSavedSelector","removeFromSavedSelector","isSavedSongsLoadingSelector","savedSongsSelector","SavedList","useEffect","window","scrollTo","top","behavior","AddToSavedBtn","_ref$dataToSave","dataToSave","_ref$onAddedToSaved","onAddedToSaved","_ref$onRemovedFromSav","onRemovedFromSaved","isInSaved","some","toggleToSaved","IconButton","type","bg","icon","AiFillHeart","AiOutlineHeart","Saved","navigate","useNavigate","Box","pt"],"sourceRoot":""}